# WebSocket 升级映射 (添加到 http 块内，与 server 同级)
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# 上游服务定义
upstream derp_backend {
    server 127.0.0.1:444;
    keepalive 300;  # 保持连接池
}

server {
    server_name derp.acacia.website;
    
    # 使用非常规端口 442 并启用 HTTP/2
    listen 442 ssl http2;
    
    # SSL 证书 (保持 Certbot 管理)
    ssl_certificate /etc/letsencrypt/live/blog.acacia.website/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/blog.acacia.website/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        
    location / {
        # 核心代理设置
        proxy_pass http://derp_backend;
        proxy_http_version 1.1;
        
        # 标准头传递
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 支持
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # 连接优化
        proxy_redirect off;
        proxy_buffering off;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        
        # 大文件上传支持
        client_max_body_size 8192m;
        client_body_buffer_size 128k;
    }
}

# HTTP 重定向到 HTTPS (442 端口)
server {
    listen 80;
    server_name derp.acacia.website;
    return 301 https://$host:442$request_uri;
}
